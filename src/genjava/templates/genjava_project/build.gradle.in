/*
 * Copyright (C) 2014 %(author)s
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */


buildscript {
    def rosMavenPath = "$System.env.ROS_MAVEN_PATH".split(':').collect { 'file://' + it }
    def rosMavenRepository = "$System.env.ROS_MAVEN_REPOSITORY"
    repositories {
        rosMavenPath.each { p ->
            maven {
                url p
            }
        }
        mavenLocal()
        maven {
            url rosMavenRepository
        }
    }
    dependencies {
        classpath group: 'org.ros.rosjava_bootstrap', name: 'gradle_plugins', version: '[0.3,0.4)'
    }
}

apply plugin: 'ros-java'
apply plugin: 'osgi'
group 'org.ros.rosjava_messages'
version = '%(project_version)s'

ext {
    generated_sources_directory = "${projectDir}/src/main/java"
}

task generateSources (type: JavaExec) {
    description = "Generate sources for %(project_name)s"
    outputs.dir(file(generated_sources_directory))
    args = new ArrayList<String>(['--output-path', generated_sources_directory, '--package-path' ,'%(pkg_directory)s', '--package-names' ,'%(project_name)s', '--sources', '%(sources_dir)s'])
    classpath = configurations.runtime
    main = 'org.ros.internal.message.GenerateInterfaces'
    tasks.compileJava.source outputs.files
    doLast {
        if("$System.env.ROS_GRADLE_VERBOSE" == "true") println 'Create PKG from %(pkg_directory)s'
    }
}

dependencies {
    compile 'org.ros.rosjava_bootstrap:message_generation:[0.3,0.4)'
    %(msg_dependencies)s
}

task info {
    doLast {
        println "\nProject Info"
        println "============\n"
        println "Name          : ${rootProject}"
        println "Dir           : ${projectDir}"
        println "Group         : ${group}"
        println "Version       : ${version}"
        println "Configurations: " + configurations

        println "\nPackage Info"
        println "============\n"
        println "Name          : %(project_name)s"
        println "Dir           : %(pkg_directory)s"
        println "ROS MAVEN PATH: ${System.getenv("ROS_MAVEN_PATH")}"
        project.repositories.each{
            println "MAVEN REPO    : ${it.getUrl()}"
        }

        println "\nGenerate Info"
        println "============\n"
        println "Output Dir    : ${generated_sources_directory}"
        println "Task Args     : " + tasks["generateSources"].args
        tasks["generateSources"].outputs.getFiles().getAsFileTree().each {
            println "Files         : ${it}"
        }

        println "\nPublish Info"
        println "============\n"

        println "publishMavenJavaPublicationToMavenRepository"
        project.publishing.repositories.each{
            println "Target        : ${it.getUrl()}"
        }
    }
    
}

defaultTasks 'publish'
